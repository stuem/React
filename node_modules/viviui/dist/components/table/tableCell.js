"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _core = require("@chakra-ui/core");

var _tableContext = require("./tableContext");

// th 或者 td
const TableCell = (_ref) => {
  let {
    label,
    children
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, ["label", "children"]);
  // 从组件 context 里取值
  const {
    parent
  } = (0, _react.useContext)(_tableContext.TableContext); // 使用三元表达式判断它是否等于 TableHead， 再去赋值。

  const Component = parent === 'TableHead' ? 'th' : 'td';
  return /*#__PURE__*/_react.default.createElement(_core.Box, (0, _extends2.default)({
    as: Component,
    border: "1px #e6e6e6 solid"
  }, props), // 有label时，就会执行这一段
  !!label && /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
    label: label,
    placement: "auto-start"
  }, /*#__PURE__*/_react.default.createElement(_core.Box, {
    as: "span",
    d: "inline-block"
  }, children)), // 只有 children 且没有 label 时，执行这段代码
  !!children && !label && children);
};

var _default = TableCell;
exports.default = _default;