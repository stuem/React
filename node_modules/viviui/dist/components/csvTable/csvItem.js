"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _viviui = require("viviui");

var _md = require("react-icons/md");

const CsvItem = ({
  data,
  state,
  tableHead,
  error,
  csvKey,
  index
}) => {
  const fieldLength = tableHead.length; // 如果導入的字段長度大於我們需要的字段長度，則忽略後面多餘的數據

  if (data.length > fieldLength) data.splice(fieldLength);
  let backgroundStateColor = 'white';

  switch (state) {
    case 'success':
      backgroundStateColor = '#C6F6D5';
      break;

    case 'failed':
      backgroundStateColor = '#FED7D7';
      break;

    case 'ignore':
      backgroundStateColor = '#FEEBC8';
      break;
  }

  return /*#__PURE__*/React.createElement(_viviui.TableRow, {
    background: backgroundStateColor
  }, /*#__PURE__*/React.createElement(_viviui.TableCell, null, /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: index + 1,
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    textAlign: "center",
    w: "90px"
  }, index + 1))), [...data, ...new Array(fieldLength - data.length)].map((value, i) => {
    return /*#__PURE__*/React.createElement(_viviui.TableCell, {
      key: i
    }, typeof value === 'object' && /*#__PURE__*/React.createElement(_viviui.Box, null, value), typeof value !== 'object' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
      label: value,
      placement: "auto-start"
    }, /*#__PURE__*/React.createElement(_viviui.Box, {
      whiteSpace: "nowrap",
      overflow: "hidden",
      textOverflow: "ellipsis",
      wordBreak: "break-word",
      textAlign: "center",
      px: 2,
      w: `${tableHead[i].width}px`,
      maxW: `${tableHead[i].width}px`
    }, value)));
  }), /*#__PURE__*/React.createElement(_viviui.TableCell, null, /*#__PURE__*/React.createElement(_viviui.Box, {
    w: "90px",
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  }, state === 'ready' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: "\u672A\u63D0\u4EA4",
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    textAlign: "center"
  }, "\u672A\u63D0\u4EA4")), state === 'uploading' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: "\u4E0A\u50B3\u4E2D",
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Spinner, {
    color: "blue.500",
    w: "20px",
    h: "20px"
  })), state === 'ignore' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: error || '忽略',
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    fontSize: "28px"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    as: _md.MdWarning,
    color: "orange.300"
  }))), state === 'success' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: "\u63D0\u4EA4\u6210\u529F",
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    fontSize: "28px"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    as: _md.MdCheckCircle,
    color: "green.400"
  }))), state === 'failed' && /*#__PURE__*/React.createElement(_viviui.Tooltip, {
    label: error || '提交失敗',
    placement: "auto-start"
  }, /*#__PURE__*/React.createElement(_viviui.Box, {
    fontSize: "28px"
  }, /*#__PURE__*/React.createElement(_viviui.TableRow, {
    as: _md.MdError,
    color: "red.500"
  })))))) // <Box as='tr' className='csv-table-body-content' background={backgroundStateColor}>
  //   {
  //     <Box
  //       as='td'
  //       h='40px'
  //       className='csv-table-body-item'
  //     >
  //       <Tooltip label={index + 1} placement='auto-start'>
  //         <Box textAlign='center' w='90px'>{index + 1}</Box>
  //       </Tooltip>
  //     </Box>
  //   }
  //   {
  //     [...data, ...new Array((fieldLength - data.length))].map((value, i) => {
  //       return (
  //         <Box
  //           as='td'
  //           key={i}
  //           h='40px'
  //           className='csv-table-body-item'
  //         >
  //           {
  //             (typeof value === 'object') && (
  //               <Box>{value}</Box>
  //             )
  //           }
  //           {
  //             (typeof value !== 'object') && (
  //               <Tooltip label={value} placement='auto-start'>
  //                 <Box
  //                   whiteSpace='nowrap'
  //                   overflow='hidden'
  //                   textOverflow='ellipsis'
  //                   wordBreak='break-word'
  //                   textAlign='center'
  //                   px={2}
  //                   w={`${tableHead[i].width}px`}
  //                   maxW={`${tableHead[i].width}px`}
  //                 >
  //                   {value}
  //                 </Box>
  //               </Tooltip>
  //             )
  //           }
  //            </Box >
  //          )
  //        })
  //      }
  // {
  //   <Box as='td' h='40px' className='csv-table-body-item'>
  //     <Box
  //       w='90px'
  //       display='flex'
  //       alignItems='center'
  //       justifyContent='center'
  //     >
  //       {
  //         state === 'ready' && (
  //           <Tooltip label='未提交' placement='auto-start'>
  //             <Box textAlign='center'>
  //               未提交
  //                  </Box>
  //           </Tooltip>
  //         )
  //       }
  //       {
  //         state === 'uploading' && (
  //           <Tooltip label='上傳中' placement='auto-start'>
  //             <Spinner color='blue.500' w='20px' h='20px' />
  //           </Tooltip>
  //         )
  //       }
  //       {
  //         state === 'ignore' && (
  //           <Tooltip label={error || '忽略'} placement='auto-start'>
  //             <Box fontSize='28px'>
  //               <Box as={MdWarning} color='orange.300' />
  //             </Box>
  //           </Tooltip>
  //         )
  //       }
  //       {
  //         state === 'success' && (
  //           <Tooltip label='提交成功' placement='auto-start'>
  //             <Box fontSize='28px'>
  //               <Box as={MdCheckCircle} color='green.400' />
  //             </Box>
  //           </Tooltip>
  //         )
  //       }
  //       {
  //         state === 'failed' && (
  //           <Tooltip label={error || '提交失敗'} placement='auto-start'>
  //             <Box fontSize='28px'>
  //               <Box as={MdError} color='red.500' />
  //             </Box>
  //           </Tooltip>
  //         )
  //       }
  //     </Box>
  //   </Box>
  // }
  //    </Box >
  ;
};

var _default = /*#__PURE__*/(0, _react.memo)(CsvItem);

exports.default = _default;