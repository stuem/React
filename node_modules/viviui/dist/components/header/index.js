"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _core = require("@chakra-ui/core");

var _md = require("react-icons/md");

var _container = _interopRequireDefault(require("../container"));

var _headerLeft = _interopRequireDefault(require("./headerLeft"));

var _headerRight = _interopRequireDefault(require("./headerRight"));

var _headerLogo = _interopRequireDefault(require("./headerLogo"));

var _headerCenter = _interopRequireDefault(require("./headerCenter"));

var _headerWrapper = _interopRequireDefault(require("./headerWrapper"));

var _headerMobileNav = _interopRequireDefault(require("./headerMobileNav"));

const Header = (_ref) => {
  let {
    containerProps,
    // 傳入頭部的數據
    children // 除以上輸入值外都會解構到props裏，props裏可以是外邊框、内邊框、字體顔色、背景顔色、border，傳入chakra能接受的樣式到最外層的Box裏。

  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, ["containerProps", "children"]);
  const {
    colorMode
  } = (0, _core.useColorMode)();
  const {
    isOpen,
    onOpen,
    onClose
  } = (0, _core.useDisclosure)();
  const bg = {
    light: 'white',
    dark: 'gray.800'
  };
  let logo = null;
  let left = null;
  let center = null;
  let right = null;
  let drawerItems = null;

  _react.Children.map(children, (c, i) => {
    switch (c.type) {
      case _headerLogo.default:
        logo = c; // 自定義logo

        break;

      case _headerLeft.default:
        left = c; // Header左邊列表

        break;

      case _headerCenter.default:
        center = c; // Header 中間列表

        break;

      case _headerRight.default:
        right = c; // Header 右邊列表

        break;

      case _headerMobileNav.default:
        drawerItems = c.props.children; // 選單數據

        break;
    }
  });

  return /*#__PURE__*/_react.default.createElement(_headerWrapper.default, (0, _extends2.default)({
    bg: props.bg || bg[colorMode]
  }, props), /*#__PURE__*/_react.default.createElement(_container.default, (0, _extends2.default)({
    height: "4rem",
    bg: props.bg || bg[colorMode]
  }, containerProps), /*#__PURE__*/_react.default.createElement(_core.Flex, {
    size: "100%",
    px: {
      base: 0,
      sm: 2,
      md: 4
    },
    align: "center",
    w: "full",
    justify: "space-between"
  }, logo, left, center, right, !!drawerItems && /*#__PURE__*/_react.default.createElement(_core.Flex, {
    justify: "flex-end"
  }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
    onClick: onOpen,
    display: {
      sm: 'inline-flex',
      md: 'none'
    },
    "aria-label": "Navigation Menu",
    fontSize: "20px",
    variant: "ghost",
    icon: _md.MdDehaze,
    marginRight: "-16px"
  }), /*#__PURE__*/_react.default.createElement(_core.Drawer, {
    placement: "left",
    onClose: onClose,
    isOpen: isOpen
  }, /*#__PURE__*/_react.default.createElement(_core.DrawerOverlay, null), /*#__PURE__*/_react.default.createElement(_core.DrawerContent, null, /*#__PURE__*/_react.default.createElement(_core.DrawerCloseButton, null), /*#__PURE__*/_react.default.createElement(_core.DrawerHeader, {
    borderBottomWidth: "1px"
  }, "\u9078\u9805"), /*#__PURE__*/_react.default.createElement(_core.DrawerBody, {
    fontSize: {
      sm: 'xs',
      md: 'sm'
    }
  }, drawerItems)))))));
};

var _default = /*#__PURE__*/(0, _react.memo)(Header);

exports.default = _default;