"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _core = require("@chakra-ui/core");

var _formik = require("formik");

const AddIntelligence = (_ref) => {
  let {
    submitButton,
    cancelButton
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, ["submitButton", "cancelButton"]);
  const toast = (0, _core.useToast)();

  const validateName = value => {
    let error;

    if (!value) {
      error = '内容不能为空';
    } else if (value.length < 3) {
      error = '长度不能少于2个';
    }

    return error;
  };

  return /*#__PURE__*/_react.default.createElement(_core.PseudoBox, {
    _hover: {
      backgroundColor: '#ceedff'
    },
    cursor: "pointer",
    p: {
      base: '20px',
      sm: '20px',
      md: '10px'
    }
  }, /*#__PURE__*/_react.default.createElement(_formik.Formik, {
    initialValues: {
      name1: '',
      name2: ''
    },
    onSubmit: (values, actions) => {
      toast({
        position: 'top',
        title: 'Account created.',
        description: "We've created your account for you.",
        status: 'success',
        duration: 9000,
        isClosable: true
      });
      console.log(values.name1, values.name2);
      actions.setSubmitting(false);
    }
  }, ({
    isSubmitting
  }) => /*#__PURE__*/_react.default.createElement(_formik.Form, {
    p: "5px 0"
  }, /*#__PURE__*/_react.default.createElement(_core.Flex, {
    direction: {
      base: 'column',
      md: 'row'
    },
    alignItems: "center",
    justifyContent: {
      md: 'space-between',
      base: 'flex-start'
    }
  }, /*#__PURE__*/_react.default.createElement(_core.Grid, {
    width: {
      base: '100%',
      md: '60%'
    },
    templateColumns: "repeat(1, 1fr)",
    gap: 4
  }, /*#__PURE__*/_react.default.createElement(_formik.Field, {
    name: "name1",
    validate: validateName
  }, ({
    field,
    form: {
      errors,
      touched
    }
  }) => /*#__PURE__*/_react.default.createElement(_core.FormControl, {
    isInvalid: errors.name1 && touched.name1
  }, /*#__PURE__*/_react.default.createElement(_core.Input, (0, _extends2.default)({
    placeholder: "\u65B0\u589E\u667A\u80FD\u540D\u79F0"
  }, field)), /*#__PURE__*/_react.default.createElement(_core.FormErrorMessage, null, errors.name1))), /*#__PURE__*/_react.default.createElement(_formik.Field, {
    name: "name2",
    validate: validateName
  }, ({
    field,
    form: {
      errors,
      touched
    }
  }) => /*#__PURE__*/_react.default.createElement(_core.FormControl, {
    isInvalid: errors.name2 && touched.name2
  }, /*#__PURE__*/_react.default.createElement(_core.Input, (0, _extends2.default)({
    placeholder: "\u65B0\u589E\u667A\u80FD\u82F1\u6587\u540D\u79F0"
  }, field)), /*#__PURE__*/_react.default.createElement(_core.FormErrorMessage, null, errors.name2)))), /*#__PURE__*/_react.default.createElement(_core.Grid, {
    width: {
      base: '100%',
      md: '30%'
    },
    mt: {
      base: '20px',
      md: '0'
    },
    templateColumns: "repeat(2, 1fr)",
    gap: 8
  }, /*#__PURE__*/_react.default.createElement(_core.Button, {
    isLoading: props.isSubmitting,
    variantColor: "green",
    type: "submit"
  }, " ", submitButton || '送出资料', " "), /*#__PURE__*/_react.default.createElement(_core.Button, {
    onClick: () => {
      props.onClose();
    },
    variantColor: "green"
  }, cancelButton || '取消', " "))))));
};

var _default = AddIntelligence;
exports.default = _default;