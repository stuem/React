{"ast":null,"code":"import _toConsumableArray from \"D:/React/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import './index.css'\n\nimport { ThemeProvider, Editable, EditablePreview, EditableInput, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel, Input, Checkbox, Button, Box, CSSReset, theme } from \"@chakra-ui/core\";\n\nfunction Index() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useState3 = useState([]),\n      listms = _useState3[0],\n      setlTslim = _useState3[1];\n\n  console.log(listms); //增加页面内容\n\n  var addData = function addData(value) {\n    if (value) {\n      setCount(\"\");\n      setList([].concat(_toConsumableArray(list), [value]));\n    }\n  }; //删除\n\n\n  function liClick(e) {\n    list.splice(e, 1);\n    setList(_toConsumableArray(list));\n  }\n\n  ; //修改\n\n  function setCounTinp(e) {\n    var input = document.getElementById(\"input\" + e);\n    var value = input.value;\n\n    if (value) {\n      list[e] = value;\n      setList(_toConsumableArray(list));\n      input.value = \"\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CSSReset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"App\",\n      w: \"80%\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: count,\n        onChange: function onChange(e) {\n          return setCount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return addData(count);\n        },\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u6B63\\u5728\\u8FDB\\u884C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), list.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"input\" + index,\n            placeholder: item,\n            size: \"sm\",\n            w: \"20%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            size: \"md\",\n            colorScheme: \"green\",\n            onClick: function onClick(e) {\n              return setlTslim(e);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: function onClick() {\n              return setCounTinp(index);\n            },\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: function onClick(e) {\n              return liClick(index);\n            },\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Index, \"8holUeaMn2a8Taga8U5Ahyggez4=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/React/pages/index.js"],"names":["React","useState","ThemeProvider","Editable","EditablePreview","EditableInput","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","Input","Checkbox","Button","Box","CSSReset","theme","Index","count","setCount","list","setList","listms","setlTslim","console","log","addData","value","liClick","e","splice","setCounTinp","input","document","getElementById","target","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// import './index.css'\r\nimport {\r\n    ThemeProvider,\r\n    Editable, EditablePreview, EditableInput,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl, FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    Button,\r\n    Box,\r\n    CSSReset,\r\n    theme\r\n} from \"@chakra-ui/core\";\r\nfunction Index() {\r\n    const [count, setCount] = useState(\"\"); \r\n    const [list, setList] = useState([]);\r\n    const [listms, setlTslim] = useState([]);\r\n    console.log(listms);\r\n    //增加页面内容\r\n    const addData = (value) => {\r\n        if (value) {\r\n            setCount(\"\");\r\n            setList([\r\n                ...list,\r\n                value\r\n            ])\r\n        }\r\n    }\r\n    //删除\r\n    function liClick(e) {\r\n        list.splice(e, 1);\r\n        setList([...list]);\r\n    };\r\n    //修改\r\n    function setCounTinp(e){\r\n        let input = document.getElementById(\"input\"+e);\r\n        var value = input.value;\r\n        if (value) {\r\n            list[e] = value;\r\n            setList([...list]);\r\n            input.value=\"\";\r\n        }\r\n      }\r\n    return (\r\n            <ThemeProvider theme={theme}>\r\n                <CSSReset/>\r\n        <Box className=\"App\" w=\"80%\">\r\n                <Input value={count} onChange={(e) => setCount(e.target.value)} />\r\n                <Button onClick={() => addData(count)}>添加</Button>\r\n                <h1>正在进行</h1>\r\n                {\r\n                    list.map((item, index) =>\r\n                        <Box key={index}>\r\n                            <Input id={\"input\"+index} placeholder={item} size=\"sm\" w=\"20%\" />\r\n                            <Checkbox size=\"md\" colorScheme=\"green\" onClick={(e) => setlTslim(e)} >\r\n                                <span>{item}</span>\r\n                            </Checkbox>\r\n                            <Button h=\"1.75rem\" size=\"sm\" onClick={() => setCounTinp(index)}>修改</Button>\r\n                            <Button h=\"1.75rem\" size=\"sm\" onClick={(e) => liClick(index)}>删除</Button>\r\n                        </Box>\r\n                    )\r\n                }\r\n                <h1>已经完成</h1>\r\n        </Box>\r\n            </ThemeProvider>\r\n    );\r\n}\r\nexport default Index"]},"metadata":{},"sourceType":"module"}