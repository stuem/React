{"ast":null,"code":"import _toConsumableArray from \"D:/React/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import './index.css'\n\nimport { ThemeProvider, Editable, EditablePreview, EditableInput, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel, Input, Button, Box } from \"@chakra-ui/core\"; // function dials() {\n//     const { isOpen, onOpen, onClose } = useDisclosure();\n//     const initialRef = React.useRef();\n//     const finalRef = React.useRef();\n//     console.log(initialRef, finalRef);\n//     return (\n//         <Modal\n//             initialFocusRef={initialRef}\n//             finalFocusRef={finalRef}\n//             isOpen={isOpen}\n//             onClose={onClose}\n//         >\n//             <ModalOverlay />\n//             <ModalContent>\n//                 <ModalHeader>Create your account</ModalHeader>\n//                 <ModalCloseButton />\n//                 <ModalBody pb={6}>\n//                     <FormControl>\n//                         <FormLabel>内容</FormLabel>\n//                         <Input ref={initialRef} placeholder={item} />\n//                     </FormControl>\n//                 </ModalBody>\n//                 <ModalFooter>\n//                     <Button onClick={onClose}>取消</Button>\n//                     <Button colorScheme=\"blue\" mr={3}>\n//                         确定\n//                     </Button>\n//                 </ModalFooter>\n//             </ModalContent>\n//         </Modal>\n//     )\n// }\n\nfunction Index() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      count = _useState[0],\n      setCount = _useState[1]; //添加\n\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1]; //渲染\n\n\n  var _useState3 = useState([]),\n      listDra = _useState3[0],\n      setListDra = _useState3[1]; // const { isOpen, onOpen, onClose } = useDisclosure();\n  // const initialRef = React.useRef();\n  // const finalRef = React.useRef();\n  // console.log(initialRef, finalRef);\n  //增加页面内容\n\n\n  var addData = function addData(value) {\n    if (value) {\n      var _console;\n\n      setCount(\"\");\n      setList([].concat(_toConsumableArray(list), [value]));\n\n      (_console = console).log.apply(_console, _toConsumableArray(list));\n    }\n  }; //删除\n\n\n  function liClick(e) {\n    list.splice(e, 1);\n    setList(_toConsumableArray(list));\n  }\n\n  ; //修改\n\n  function setCounTinp(e) {\n    var _console2;\n\n    setListDra([].concat(_toConsumableArray(listDra), [e]));\n\n    (_console2 = console).log.apply(_console2, _toConsumableArray(listDra[e])); // if (e) {\n    //     console.log(e);\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    w: \"80%\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: count,\n        onChange: function onChange(e) {\n          return setCount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return addData(count);\n        },\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u6B63\\u5728\\u8FDB\\u884C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), list.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: item,\n            size: \"sm\",\n            w: \"20%\",\n            onChange: function onChange(e) {\n              return setListDra(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: function onClick(e) {\n              return setCounTinp(index);\n            },\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: function onClick(e) {\n              return liClick(index);\n            },\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Index, \"EnD47C5/G0p+QdphxVuaG5YZtkQ=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/React/pages/index.js"],"names":["React","useState","ThemeProvider","Editable","EditablePreview","EditableInput","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","Input","Button","Box","Index","count","setCount","list","setList","listDra","setListDra","addData","value","console","log","liClick","e","splice","setCounTinp","target","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// import './index.css'\r\nimport {\r\n    ThemeProvider,\r\n    Editable, EditablePreview, EditableInput,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl, FormLabel,\r\n    Input,\r\n    Button,\r\n    Box\r\n} from \"@chakra-ui/core\";\r\n// function dials() {\r\n//     const { isOpen, onOpen, onClose } = useDisclosure();\r\n//     const initialRef = React.useRef();\r\n//     const finalRef = React.useRef();\r\n//     console.log(initialRef, finalRef);\r\n//     return (\r\n//         <Modal\r\n//             initialFocusRef={initialRef}\r\n//             finalFocusRef={finalRef}\r\n//             isOpen={isOpen}\r\n//             onClose={onClose}\r\n//         >\r\n//             <ModalOverlay />\r\n//             <ModalContent>\r\n//                 <ModalHeader>Create your account</ModalHeader>\r\n//                 <ModalCloseButton />\r\n//                 <ModalBody pb={6}>\r\n//                     <FormControl>\r\n//                         <FormLabel>内容</FormLabel>\r\n//                         <Input ref={initialRef} placeholder={item} />\r\n//                     </FormControl>\r\n//                 </ModalBody>\r\n//                 <ModalFooter>\r\n//                     <Button onClick={onClose}>取消</Button>\r\n//                     <Button colorScheme=\"blue\" mr={3}>\r\n//                         确定\r\n//                     </Button>\r\n//                 </ModalFooter>\r\n//             </ModalContent>\r\n//         </Modal>\r\n//     )\r\n// }\r\nfunction Index() {\r\n    const [count, setCount] = useState(\"\"); //添加\r\n    const [list, setList] = useState([]);   //渲染\r\n    const [listDra, setListDra] = useState([]);\r\n    // const { isOpen, onOpen, onClose } = useDisclosure();\r\n    // const initialRef = React.useRef();\r\n    // const finalRef = React.useRef();\r\n    // console.log(initialRef, finalRef);\r\n    //增加页面内容\r\n    const addData = (value) => {\r\n        if (value) {\r\n            setCount(\"\");\r\n            setList([\r\n                ...list,\r\n                value\r\n            ])\r\n            console.log(...list);\r\n        }\r\n    }\r\n    //删除\r\n    function liClick(e) {\r\n        list.splice(e, 1);\r\n        setList([...list]);\r\n    };\r\n    //修改\r\n    function setCounTinp(e) {\r\n        setListDra([\r\n            ...listDra,\r\n            e\r\n        ]);\r\n        console.log(...listDra[e]);\r\n        // if (e) {\r\n        //     console.log(e);\r\n        // }\r\n    }\r\n    return (\r\n        <Box className=\"App\" w=\"80%\">\r\n            <ThemeProvider>\r\n                <Input value={count} onChange={(e) => setCount(e.target.value)} />\r\n                <Button onClick={() => addData(count)}>添加</Button>\r\n                <h1>正在进行</h1>\r\n                {\r\n                    list.map((item, index) =>\r\n                        <Box key={index}>\r\n                            <input placeholder={item} size=\"sm\" w=\"20%\" onChange={(e) => setListDra(e.target.value)} />\r\n                            <span>{item}</span>\r\n                            <Button h=\"1.75rem\" size=\"sm\" onClick={(e) => setCounTinp(index)}>修改</Button>\r\n                            <Button h=\"1.75rem\" size=\"sm\" onClick={(e) => liClick(index)}>删除</Button>\r\n                        </Box>\r\n                    )\r\n                }\r\n                <h1>已经完成</h1>\r\n            </ThemeProvider>\r\n        </Box>\r\n    );\r\n}\r\nexport default Index"]},"metadata":{},"sourceType":"module"}