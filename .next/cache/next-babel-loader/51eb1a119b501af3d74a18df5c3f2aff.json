{"ast":null,"code":"import _toConsumableArray from \"D:/React/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pages\\\\todolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import './index.css'\n\nimport { ThemeProvider, Editable, EditablePreview, EditableInput, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel, Input, Checkbox, Button, Box } from \"@chakra-ui/core\";\n\nfunction Index() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState([]),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var _useState3 = useState([]),\n      listms = _useState3[0],\n      setlTslim = _useState3[1];\n\n  console.log(listms); //增加页面内容\n\n  var addData = function addData(value) {\n    if (value) {\n      setCount(\"\");\n      setList([].concat(_toConsumableArray(list), [value]));\n    }\n  }; //删除\n\n\n  function liClick(e) {\n    list.splice(e, 1);\n    setList(_toConsumableArray(list));\n    setlTslim(_toConsumableArray(listms));\n  }\n\n  ; //修改\n\n  function setCounTinp(e) {\n    var input = document.getElementById(\"input\" + e);\n    var value = input.value;\n\n    if (value) {\n      list[e] = value;\n      setList(_toConsumableArray(list));\n      input.value = \"\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    w: \"80%\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      errorBorderColor: \"red.300\",\n      value: count,\n      onChange: function onChange(e) {\n        return setCount(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variantColor: \"teal\",\n      size: \"xs\",\n      onClick: function onClick() {\n        return addData(count);\n      },\n      children: \"\\u6DFB\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6B63\\u5728\\u8FDB\\u884C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), list.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"input\" + index,\n          placeholder: item,\n          size: \"sm\",\n          w: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          size: \"md\",\n          colorScheme: \"green\",\n          isInvalid: true,\n          onClick: function onClick(e) {\n            return setlTslim(e.target.parentNode.outerText);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 12\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          h: \"1.75rem\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return setCounTinp(index);\n          },\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          h: \"1.75rem\",\n          size: \"sm\",\n          onClick: function onClick(e) {\n            return liClick(index);\n          },\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5DF2\\u7ECF\\u5B8C\\u6210\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Index, \"8holUeaMn2a8Taga8U5Ahyggez4=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/React/pages/todolist.js"],"names":["React","useState","ThemeProvider","Editable","EditablePreview","EditableInput","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","Input","Checkbox","Button","Box","Index","count","setCount","list","setList","listms","setlTslim","console","log","addData","value","liClick","e","splice","setCounTinp","input","document","getElementById","target","map","item","index","parentNode","outerText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// import './index.css'\r\nimport {\r\n    ThemeProvider,\r\n    Editable, EditablePreview, EditableInput,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl, FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    Button,\r\n\t\tBox,\r\n} from \"@chakra-ui/core\";\r\nfunction Index() {\r\n    const [count, setCount] = useState(\"\"); \r\n    const [list, setList] = useState([]);\r\n    const [listms, setlTslim] = useState([]);\r\n    console.log(listms);\r\n    //增加页面内容\r\n    const addData = (value) => {\r\n        if (value) {\r\n            setCount(\"\");\r\n            setList([\r\n                ...list,\r\n                value\r\n            ])\r\n        }\r\n    }\r\n    //删除\r\n    function liClick(e) {\r\n        list.splice(e, 1);\r\n\t\t\t\tsetList([...list]);\r\n\t\t\t\tsetlTslim([...listms]);\r\n    };\r\n    //修改\r\n    function setCounTinp(e){\r\n        let input = document.getElementById(\"input\"+e);\r\n        var value = input.value;\r\n        if (value) {\r\n            list[e] = value;\r\n            setList([...list]);\r\n            input.value=\"\";\r\n        }\r\n      }\r\n    return (\r\n        <Box className=\"App\" w=\"80%\">\r\n\t\t\t\t<Input errorBorderColor=\"red.300\" value={count} onChange={(e) => setCount(e.target.value)} />\r\n\t\t\t\t<Button variantColor=\"teal\" size=\"xs\" onClick={() => addData(count)}>添加</Button>\r\n\t\t\t\t<h1>正在进行</h1>\r\n\t\t\t\t{\r\n\t\t\t\t\t\tlist.map((item, index) =>\r\n\t\t\t\t\t\t\t\t<Box key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<Input id={\"input\"+index} placeholder={item} size=\"sm\" w=\"20%\" />\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox size=\"md\" colorScheme=\"green\" isInvalid onClick={(e) => setlTslim(e.target.parentNode.outerText)} >\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{item}</span>\r\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t\t\t\t\t<Button h=\"1.75rem\" size=\"sm\" onClick={() => setCounTinp(index)}>修改</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button h=\"1.75rem\" size=\"sm\" onClick={(e) => liClick(index)}>删除</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<h1>已经完成</h1>\r\n\t\t\t\t{/* {\r\n\t\t\t\t\tlistms.map((item,index) =>\r\n\t\t\t\t\t\t<Box key={index}>\r\n\t\t\t\t\t\t\t<Checkbox size=\"md\" colorScheme=\"green\" isInvalid onClick={(e) => setlTslim(e.target.parentNode.outerText)} >\r\n\t\t\t\t\t\t\t\t<span>{item}</span>\r\n\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t)\r\n\t\t\t\t} */}\r\n      </Box>\r\n    );\r\n}\r\nexport default Index"]},"metadata":{},"sourceType":"module"}